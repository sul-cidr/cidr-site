---
import { renderMarkdown } from "@astrojs/markdown-remark";

import projects from "../data/projects.yaml";

// This whole shenanigans is required to use dynamic imports in the SSR/build step.
const media = import.meta.glob("../assets/projects/*");
for (const project of projects) {
  if (project.image) {
    const { default: imagePath } = await (await media[`../assets/${project.image}`])();
    project.imagePath = imagePath;
  }

  if (project.video) {
    const { default: videoPath } = await (await media[`../assets/${project.video}`])();
    project.videoPath = videoPath;
  }

  // might as well parse and render any markdown asynchronously here too,
  //  while we're at it.
  const { code: html } = await renderMarkdown(project.text, {});
  project.html = html;
}
---

{
  projects.map(async (project) => {
    return (
      <section>
        {project.link ? (
          <a href={project.link}>
            <header>{project.title}</header>
          </a>
        ) : (
          <header>{project.title}</header>
        )}
        {project.video ? (
          <video src={`${project.videoPath}#t=8`} loop muted />
        ) : (
          <img src={project.imagePath} alt={project.title} />
        )}
        <article set:html={project.html} />
      </section>
    );
  })
}

<script>
  document.querySelectorAll("section").forEach((section) => {
    const vid = section.querySelector("video");
    if (!vid) return;
    section.addEventListener("mouseover", vid.play.bind(vid));
    section.addEventListener("mouseout", vid.pause.bind(vid));
  });
</script>

<style>
  section {
    align-items: flex-end;
    display: grid;
    gap: 0.5em 1em;
    grid-template-areas: "header" "image" "text";
    margin-top: 1em;
    position: relative;
    transition: transform 0.1s ease-in-out;

    & + section {
      margin-top: 3em;
    }

    &::before {
      border-radius: 0.25em;
      content: "";
      display: block;
      height: calc(100% + 1.5em);
      left: -1em;
      position: absolute;
      top: -0.5em;
      transition:
        box-shadow 0.4s ease-in-out,
        background-color 0.4s ease-in-out;
      width: calc(100% + 2em);
      z-index: -1;
    }

    &:hover {
      transform: scale(1.05);
    }

    &:hover::before {
      background-color: var(--fog-light);
      box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
      transition:
        box-shadow 0.1s ease-in-out,
        background-color 0.4s ease-in-out;
    }
  }

  header {
    color: var(--cardinal);
    font-size: 2rem;
    font-variant: petite-caps;
    font-weight: 400;
    grid-area: header;
    line-height: 1;
    text-align: center;
  }

  article {
    border-top: 1px solid var(--cool-grey);
    align-self: flex-start;
    font-size: smaller;
    grid-area: text;
    max-width: 100%;
    overflow: hidden;
    padding-top: 0.5em;
    text-align: justify;
  }

  img,
  video {
    align-self: center;
    border: 2px solid var(--cardinal);
    box-sizing: content-box;
    grid-area: image;
    justify-self: center;
    margin-top: 0.25em;
    max-width: calc(100% - 8px);
    padding: 2px;
  }

  @media screen and (min-width: 900px) {
    section {
      grid-template-areas: "header image" "text image";
      grid-template-columns: 1fr auto;
      grid-template-rows: auto 1fr;
    }

    section:nth-child(even) {
      grid-template-areas: "image header" "image text";
      grid-template-columns: auto 1fr;
    }
  }
</style>
